---
title: "Adding in more data"
author: "Christopher Hughes"
format: html
---

## Details

This document describes adding more information to our RNAseq results.

## Setting up the environment

These are packages you will need for this notebook. For exact versions used, please refer to the session info at the bottom of this notebook.

```{r}
#| message: false
#| warning: false
##########################################################################################
library('tidyverse')
library('ggplot2')
library('RColorBrewer')
```

I want to set a base directory that we can use as a link to the directory where we will do most of the work. I use two directories here because the Workspace is what is pushed to GitHub and contains scripts and plot files, but the Repository is where more of the big data is stored that does not get pushed.

```{r}
##########################################################################################
generalDatasets = 'C:/Users/chughes/Documents/bccrc/projectsRepository/generalDatasets'
baseWorkspace = 'C:/Users/chughes/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToEwsCrisprManuscript'
baseRepository = 'C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/relatedToEwsCrisprManuscript'
```

## Data processing

Add in information about RNA expression regulation, including CCLE specificity.

```{r}
###########################################################
##sole data
sole = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/soleInducedEwsRnaSeq/datasetOutputs/dataset_deseq2_mscAndMpcDeData.rds', sep = '')) %>%
  dplyr::select(symbol, msc_log2FoldChange, mpc_log2FoldChange) %>%
  dplyr::filter(!is.na(symbol)) %>%
  dplyr::rename(mscFc = 'msc_log2FoldChange',
                mpcFc = 'mpc_log2FoldChange')

##ccle specificity
ccle = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/ccleDepMapRnaseq/dataset_rnaAndProteinSpecificityScores.rds', sep = '')) %>%
  dplyr::filter(!is.na(symbol)) %>%
  dplyr::rename(ewsRnaSpecificity = 'ewsRnaScore',
                ewsProSpecificity = 'ewsProScore')
```

Add in information about GGAA sites in proximity and their regulation.

```{r}
###########################################################
##read in the msat data and calculate some metrics
closestGgaa = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/sorensenFindingGgaaRepeats/datasetOutputs/dataset_msatsImprovedAssignment.rds',sep='')) %>%
  dplyr::select(symbol, msat_name, copyNumber) %>%
  dplyr::filter(!is.na(symbol)) %>%
  dplyr::mutate(msatCount = 1) %>%
  dplyr::group_by(symbol) %>%
  dplyr::summarise(msatCount = sum(msatCount, na.rm = TRUE), 
                   msatCopyNumber = max(copyNumber, na.rm = TRUE)) %>%
  dplyr::ungroup()

##read in the GGAA regulation data
ggaaReg = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/takGgaaTargetingRnaSeq/datasetOutputs/dataset_deseq2_a673_gfp-a673_krab.rds',sep='')) %>%
  dplyr::mutate(ensg = rownames(.)) %>%
  dplyr::filter(!is.na(symbol)) %>%
  dplyr::select(symbol, ensg, log2FoldChange, padj) %>%
  dplyr::rename(ggaaFc = 'log2FoldChange',
                ggaaPadj = 'padj')
```

Get information about FLI1 peaks from ChIP data.

```{r}
##read in the peak data and calculate some metrics
fli1Peaks = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/aynaudChipSeq/datasetOutputs/dataset_SRR8832674ImprovedAssignment.rds',sep='')) %>%
  dplyr::select(symbol, peak_name) %>%
  dplyr::filter(!is.na(symbol)) %>%
  dplyr::mutate(fli1PeakCount = 1) %>%
  dplyr::group_by(symbol) %>%
  dplyr::summarise(fli1PeakCount = sum(fli1PeakCount, na.rm = TRUE)) %>%
  dplyr::ungroup()
```

Get the proteomics data.

```{r}
###########################################################
##read in the DIA data
dia = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/sorensenEwsA673ProteomicsDia/datasetOutputs/dataset_deqmsMbr_day0-day7.rds',sep='')) %>%
  dplyr::select(symbol, AveExpr, logFC, adj.P.Val) %>%
  dplyr::filter(!is.na(symbol)) %>%
  dplyr::rename(diaExpr = 'AveExpr',
                diaFc = 'logFC',
                diaPadj = 'adj.P.Val')

##read in the DDA data
dda = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/sorensenEwsA673Proteomics/datasetOutputs/dataset_deqms_day0-day7.rds',sep='')) %>%
  dplyr::select(rnaMapSymbol, AveExpr, logFC, adj.P.Val) %>%
  dplyr::filter(!is.na(rnaMapSymbol)) %>%
  dplyr::rename(ddaExpr = 'AveExpr',
                ddaFc = 'logFC',
                ddaPadj = 'adj.P.Val',
                symbol = 'rnaMapSymbol')
```

Get the DepMap dependency data.

```{r}
###########################################################
##get the depmap data we parsed earlier
depData = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/ccleDepMapCrispr/dataset_depmapDependencyEwingOnly.rds', sep = '')) %>%
  dplyr::select(-nCellLines) %>%
  dplyr::filter(!is.na(symbol))
```

Get the surface proteomics data.

```{r}
###########################################################
##get the depmap data we parsed earlier
surfaceData = readRDS(paste(baseRepository,'/defineCandidatesExpressionData/sorensenSurfaceData/datasetOutputs/dataset_surfaceProteinRanks.rds',sep='')) %>%
  dplyr::filter(!is.na(symbol))
```



Combine these with the RNA data.

```{r}
###########################################################
##combine with the RNA data
rna = readRDS(paste(baseRepository, '/defineCandidatesExpressionData/sorensenEwsA673RnaSeq/datasetOutputs/dataset_day0vs7EwsRegulationAssignments.rds', sep = '')) %>%
  dplyr::filter(!is.na(symbol)) %>%
  dplyr::left_join(sole) %>%
  dplyr::left_join(dda) %>%
  dplyr::left_join(dia) %>%
  dplyr::left_join(ccle) %>%
  dplyr::left_join(fli1Peaks) %>%
  dplyr::left_join(closestGgaa) %>%
  dplyr::left_join(ggaaReg) %>%
  dplyr::left_join(depData) %>%
  dplyr::left_join(surfaceData)
```

Define a score that allows us to narrow down hits of interest. This score is based on somewhat subjective cutoff criteria, and thus is open to modification. I am going to focus on induced genes as these would be the most ideal for targeting in a CRISPR screen.

```{r}
###########################################################
##define an ews score in the rna table
rnaScored = rna %>%
  dplyr::mutate(isPro = rowMeans(pick(ddaFc,diaFc),na.rm = TRUE),
                fli1PeakCount = ifelse(is.na(fli1PeakCount), 0, fli1PeakCount),
                msatCount = ifelse(is.na(msatCount), 0, msatCount)) %>%
  dplyr::mutate(log2FoldChangeScore = ifelse(log2FoldChange >= 1, 1, 0),
                mscFcScore = ifelse(mscFc >= 1, 1, 0),
                mpcFcScore = ifelse(mpcFc >= 1, 1, 0),
                ewsRnaSpecificityScore = ifelse(ewsRnaSpecificity >= 1, 1, 0),
                isProScore = ifelse(isPro >= 1, 1, 0),
                fli1PeakCountScore = ifelse(fli1PeakCount >= 1, 1, 0),
                msatCountScore = ifelse(msatCount >= 1, 1, 0),
                ggaaFcScore = ifelse(ggaaFc >= 1, 1, 0)) %>%
  dplyr::mutate(ewsSumScore = rowSums(pick(log2FoldChangeScore:ggaaFcScore), na.rm = TRUE)) %>%
  dplyr::arrange(-ewsSumScore)

##save these data
saveRDS(rnaScored, paste(baseRepository, '/defineCandidatesExpressionData/sorensenEwsA673RnaSeq/datasetOutputs/dataset_ewsCrisprTargets.rds',sep=''))
write.table(rnaScored, paste(baseRepository, '/defineCandidatesExpressionData/sorensenEwsA673RnaSeq/datasetOutputs/dataset_ewsCrisprTargets.tsv',sep=''),
            col.names = TRUE, row.names = FALSE, quote = FALSE, sep = '\t')
```










