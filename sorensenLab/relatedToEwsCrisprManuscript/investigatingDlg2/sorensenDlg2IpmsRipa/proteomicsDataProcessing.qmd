---
title: "DLG2 IP MS Hibit"
author: "Christopher Hughes"
format: html
---

## Details

This document describes processing of proteomics data from an IP-MS experiment pulling on DLG2-Hibit in A673p1 cells where we have used RIPA buffer for lysis.

## Setting up the environment

These are packages you will need for this notebook. For exact versions used, please refer to the session info at the bottom of this notebook.

```{r}
#| message: false
#| warning: false
##########################################################################################
library('tidyverse')
library('iq')
library('RColorBrewer')
library('ggrepel')
```

I want to set a base directory that we can use as a link to the directory where we will do most of the work. I use two directories here because the Workspace is what is pushed to GitHub and contains scripts and plot files, but the Repository is where more of the big data is stored that does not get pushed.

```{r}
##########################################################################################
generalDatasets = 'C:/Users/chughes/Documents/bccrc/projectsRepository/generalDatasets'
baseWorkspace = 'C:/Users/chughes/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToEwsCrisprManuscript'
baseRepository = 'C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/relatedToEwsCrisprManuscript'
```

## Data processing

Read in data from DIA-NN and process with the IQ package.

```{r}
##########################################################################################
##first we can filter and parse the report data into a better format for IQ
raw = read_tsv('D:/msDataTemp/proteomics20230518_a673p1Dlg2HibitIpms/report.tsv', show_col_types = FALSE) %>%
  dplyr::mutate(File.Name = sub('.*ch20230517_a673p1Dlg2HibitIpms_(.*)_dia_[123]\\.mzML', '\\1', File.Name)) %>%
  dplyr::filter(Q.Value <= 0.01)

##save the data
write.table(raw, 'D:/msDataTemp/proteomics20230518_a673p1Dlg2HibitIpms/report-parsed.tsv', 
            col.names = TRUE, row.names = FALSE, quote = FALSE, sep = '\t')


##run the IQ analysis
iqResult = process_long_format('D:/msDataTemp/proteomics20230518_a673p1Dlg2HibitIpms/report-parsed.tsv', 
                           output_filename = 'D:/msDataTemp/proteomics20230518_a673p1Dlg2HibitIpms/report-pgFromIq.tsv',
                           annotation_col = 'Genes',
                           normalization = 'none',
                           peptide_extractor = function(x) gsub("[0-9].*$", "", x))

##parse the IQ result
raw.parsed = read_tsv('D:/msDataTemp/proteomics20230518_a673p1Dlg2HibitIpms/report-pgFromIq.tsv', show_col_types = FALSE) %>%
  dplyr::rename(accession = 'Protein.Group',
                symbol = 'Genes') %>%
  dplyr::mutate(wildType_rep1 = ifelse(is.na(wildType_rep1), min(wildType_rep1, na.rm = TRUE), wildType_rep1),
                wildType_rep2 = ifelse(is.na(wildType_rep2), min(wildType_rep2, na.rm = TRUE), wildType_rep2),
                wildType_rep3 = ifelse(is.na(wildType_rep3), min(wildType_rep3, na.rm = TRUE), wildType_rep3)) %>%
  dplyr::rowwise() %>%
  dplyr::mutate(clone10NA = rowSums(is.na(pick(clone10_rep1:clone10_rep3))),
                clone12NA = rowSums(is.na(pick(clone12_rep1:clone12_rep3))),
                wtMean = rowMeans(pick(wildType_rep1:wildType_rep3)),
                c10Mean = rowMeans(pick(clone10_rep1:clone10_rep3)),
                c12Mean = rowMeans(pick(clone12_rep1:clone12_rep3))) %>%
  dplyr::ungroup() %>%
  dplyr::filter(clone10NA < 2 & clone12NA < 2 & !grepl('KRT', symbol)) %>%
  dplyr::select(-clone10NA, -clone12NA) %>%
  dplyr::mutate(c10Ratio = c10Mean - wtMean,
                c12Ratio = c12Mean - wtMean) %>%
  dplyr::arrange(-c10Ratio)
  



##save the data
write.table(raw.parsed, paste(baseRepository, '/investigatingDlg2/sorensenDlg2IpmsRipa/dataset_processedIpData.tsv', sep = ''), 
            col.names = TRUE, row.names = FALSE, quote = FALSE, sep = '\t')
```

Make a plot of the interaction data.

```{r}
##########################################################################################
##plot the data
ipPlot = raw.parsed %>%
  dplyr::mutate(pColors = ifelse(dlg2Hibit10Relative >= 1 & dlg2Hibit12Relative >= 1, brewer.pal(4,'OrRd')[4], brewer.pal(3,'Greys')[2])) %>%
  dplyr::mutate(pText = ifelse(dlg2Hibit10Relative >= 1.5 & dlg2Hibit12Relative >= 1.5, symbol, ''))
ggplot(ipPlot, aes(dlg2Hibit10Relative, dlg2Hibit12Relative)) +
  geom_point(size = 1, color = ipPlot$pColors) +
  geom_text_repel(label = ipPlot$pText, size = 2, max.overlaps = 1000) +
  labs(x = 'DLG2-HiBit Clone 10 vs no-HiBit control', y = 'DLG2-HiBit Clone 12 vs no-HiBit control', title = 'DLG2-HiBit IP-MS') +
  geom_hline(yintercept = 1, linetype = 'dashed') +
  geom_vline(xintercept = 1, linetype = 'dashed') +
  theme_classic()
ggsave(paste(baseRepository, '/proteomics20230223_a673p1Dlg2IpMs/scatter_ipDataBothClones.pdf', sep = ''),
       height = 2, width = 2, useDingbats = FALSE)
```

Interface these data with RNA values from shEF1 cells.

```{r}
##########################################################################################
##read in the RNA data
pro = readRDS('C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/manuscriptPreparationDlg2/proteomicsData/sorensenEwsA673Proteomics/datasetOutputs/dataset_deqms_day0-day7.rds')

##combine with the IP data
ipPro = raw.parsed %>%
  left_join(pro) %>%
  dplyr::filter(dlg2Hibit10Relative >= 1 & dlg2Hibit12Relative >= 1) %>%
  dplyr::mutate(pColors = ifelse(sca.P.Value <= 0.001 & logFC >= 1, brewer.pal(4,'OrRd')[4], 
                                 ifelse(sca.P.Value <= 0.001 & logFC <= -1, brewer.pal(4,'GnBu')[4], brewer.pal(3,'Greys')[2]))) %>%
  dplyr::mutate(pText = ifelse(sca.P.Value <= 0.001 & abs(logFC) >= 1, symbol, ''))


##plot these highlighted hits
ggplot(ipPro, aes(logFC, -log10(sca.P.Value))) +
  geom_point(size = 1, color = ipPro$pColors) +
  geom_text_repel(label = ipPro$pText, size = 2, max.overlaps = 1000) +
  labs(x = 'log2(day0 - day7)', y = '-log10(Adjusted p-value)', title = 'Ewing sarcoma proteome') +
  geom_vline(xintercept = c(-1,1), linetype = 'dashed') +
  geom_hline(yintercept = -log10(0.001), linetype = 'dashed') +
  theme_classic()
ggsave(paste(baseRepository, '/proteomics20230223_a673p1Dlg2IpMs/scatter_ipDataBothClonesWithEwingProteomics.pdf', sep = ''),
       height = 2, width = 2, useDingbats = FALSE)
```