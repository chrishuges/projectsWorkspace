---
title: "NRF2 HiBit arsenite timecourse"
author: "Christopher Hughes"
format: html
---

## Details

This document describes processing of some plate reader data to screen NRF2 HiBit timecourse after treatment with 100uM arsenite.

## Setting up the environment

These are packages you will need for this notebook. For exact versions used, please refer to the session info at the bottom of this notebook.

```{r}
#| message: false
#| warning: false
##########################################################################################
library('tidyverse')
library('RColorBrewer')
```

I want to set a base directory that we can use as a link to the directory where we will do most of the work. I use two directories here because the Workspace is what is pushed to GitHub and contains scripts and plot files, but the Repository is where more of the big data is stored that does not get pushed.

```{r}
##########################################################################################
generalDatasets = 'C:/Users/chughes/Documents/bccrc/projectsRepository/generalDatasets'
baseWorkspace = 'C:/Users/chughes/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToYbx1'
baseRepository = 'C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/relatedToYbx1'
```

## Data processing

Input the plate reader data and plot.

```{r}
##########################################################################################
##data input
hibit = read_tsv(paste(baseRepository, '/plateReader20230303_a673p1Ybx1DtagHibitNrf2Timecourse/plateReader20230303_a673p1Ybx1DtagHibitNrf2TimecourseParsed.txt',sep=''), show_col_types = FALSE) %>%
  dplyr::filter(grepl('Nrf2', Sample)) %>%
  dplyr::mutate(time = factor(sub('.*100t(.*)h','\\1',Sample), levels = c('0','1','2','3','4'))) %>%
  dplyr::filter(!is.na(time))

##make the plot
ggplot(hibit, aes(time, Value)) +
  geom_point(size = 1) +
  labs(x = 'Time point (h)', y = 'Luminescence signal', title = 'NRF2 HiBit signal') +
  scale_y_continuous(limits = c(0,4000), breaks = seq(0,2e4,1e3)) +
  geom_hline(yintercept = mean(c(986,796)), linetype = 'dashed') +
  theme_classic()
ggsave(paste(baseRepository, '/plateReader20230303_a673p1Ybx1DtagHibitNrf2Timecourse/scatterplot_nrf2HiBitSignal.pdf', sep = ''),
       height = 2, width = 2, useDingbats = FALSE)
```

Plot the dtag data for the YBX1 variant.

```{r}
##########################################################################################
##data input
hibit = read_tsv(paste(baseRepository, '/plateReader20230303_a673p1Ybx1DtagHibitNrf2Timecourse/plateReader20230303_a673p1Ybx1DtagHibitNrf2TimecourseParsed.txt',sep=''), show_col_types = FALSE) %>%
  dplyr::filter(grepl('Ybx1', Sample)) %>%
  dplyr::mutate(time = factor(sub('.*Dtag(.*)','\\1',Sample), levels = c('Dmso','NegV1','V1','V13','V47'))) %>%
  dplyr::filter(!is.na(time)) %>%
  dplyr::mutate(Value = log2(Value / 1104792))

#mean of the dmso control
mean(c(1072404,1137179))

##make the plot
ggplot(hibit, aes(time, Value)) +
  geom_point(size = 1) +
  labs(x = 'Time point (h)', y = 'Relative luminescence', title = 'YB-1 DTag HiBit signal') +
  scale_y_continuous(limits = c(-2,0.5), breaks = seq(-3,3,0.5)) +
  geom_hline(yintercept = 0, linetype = 'dashed') +
  theme_classic()
ggsave(paste(baseRepository, '/plateReader20230303_a673p1Ybx1DtagHibitNrf2Timecourse/scatterplot_Yb1DtagHiBitSignal.pdf', sep = ''),
       height = 2, width = 2, useDingbats = FALSE)


```




Done with these data for now.

### Session info

```{r}
##########################################################################################
sessionInfo()
```

