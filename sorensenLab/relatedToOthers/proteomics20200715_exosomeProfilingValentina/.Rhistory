left_join(vesicle)
saveRDS(exoAnnotatedSet, paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/dataset_exosomeProteinsAllSamplesUnfiltered.rds', sep = ''))
write.table(exoAnnotatedSet, paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/dataset_exosomeProteinsAllSamplesUnfiltered.csv', sep = ''),
col.names = TRUE, row.names = FALSE, sep = ',', quote = FALSE)
##########################################################################################
exoProteinSubset = subset(exoProteinSet,
rowSums(is.na(exoProteinSet[,15:17])) < 3 |
rowSums(is.na(exoProteinSet[,18:20])) < 3 |
rowSums(is.na(exoProteinSet[,21:23])) < 3 |
rowSums(is.na(exoProteinSet[,24:26])) < 3)
##########################################################################################
exocarta = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/EXOCARTA_PROTEIN_MRNA_DETAILS_5.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, inExocarta = 'yes') %>%
dplyr::select(gene, inExocarta)
exocarta = unique(exocarta)
##
vesicle = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/VESICLEPEDIA_PROTEIN_MRNA_DETAILS_4.1.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, inVesiclepedia = 'yes') %>%
dplyr::select(gene, inVesiclepedia)
vesicle = unique(vesicle)
##########################################################################################
exoAnnotatedSet = exoProteinSubset %>%
left_join(exocarta) %>%
left_join(vesicle)
saveRDS(exoAnnotatedSet, paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/dataset_exosomeProteinsAllSamplesUnfiltered.rds', sep = ''))
write.table(exoAnnotatedSet, paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/dataset_exosomeProteinsAllSamplesUnfiltered.csv', sep = ''),
col.names = TRUE, row.names = FALSE, sep = ',', quote = FALSE)
##########################################################################################
generalDatasets = 'C:/Users/chughes/Documents/bccrc/projectsRepository/generalDatasets'
baseWorkspace = 'C:/Users/chughes/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToOthers'
baseRepository = 'C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/relatedToOthers'
#generalDatasets = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/generalDatasets'
#baseWorkspace = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToOthers'
#baseRepository = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/sorensenLab/relatedToOthers'
library('tidyverse')
library('ggplot2')
library('RColorBrewer')
library('vroom')
library('DEqMS')
library('UniProt.ws')
BiocManager::install('UniProt.ws')
library('tidyverse')
library('ggplot2')
library('RColorBrewer')
library('vroom')
library('DEqMS')
library('UniProt.ws')
##########################################################################################
library('tidyverse')
library('ggplot2')
library('RColorBrewer')
library('vroom')
library('DEqMS')
library('UniProt.ws')
##########################################################################################
generalDatasets = 'C:/Users/chughes/Documents/bccrc/projectsRepository/generalDatasets'
baseWorkspace = 'C:/Users/chughes/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToOthers'
baseRepository = 'C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/relatedToOthers'
#generalDatasets = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/generalDatasets'
#baseWorkspace = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToOthers'
#baseRepository = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/sorensenLab/relatedToOthers'
##########################################################################################
proteinAnnotation = readRDS(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/uniprotHumanJul2020.fasta.annotated.rds', sep = ''))
##########################################################################################
psmFiles = list.files(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/', sep = ''),
pattern = '*Default_PSM_Report\\.txt',
full.names = TRUE)
##
psmSet = data.frame()
for (i in 1:length(psmFiles)){
psmInFile = read_tsv(psmFiles[i]) %>%
dplyr::select(`Protein(s)`, Sequence, `Modified Sequence`, `Spectrum File`, `Spectrum Scan Number`) %>%
mutate(sample = sub('.*Valentina_(.*)\\.raw\\.mgf', '\\1', `Spectrum File`)) %>%
mutate(accession = sapply(str_split(`Protein(s)`, ','), '[', 1)) %>%
filter(!grepl('CONT', accession)) %>%
mutate(scan = `Spectrum Scan Number`) %>%
mutate(sequence = Sequence) %>%
mutate(modSequence = `Modified Sequence`) %>%
left_join(proteinAnnotation) %>%
filter(!is.na(gene)) %>%
dplyr::select(sample, scan, accession, gene, detectablePeptides, sequence, modSequence)
psmSet = rbind(psmSet, psmInFile)
}
##########################################################################################
quantFiles = list.files(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/quantFiles/', sep = ''),
pattern = '*Matrix\\.txt',
full.names = TRUE)
##
quantSet = data.frame()
for (i in 1:length(quantFiles)){
quantInFile = read_tsv(quantFiles[i]) %>%
dplyr::select(MS2ScanNumber, ParentPeakArea)
colnames(quantInFile)[1] = 'scan'
quantInFile$sample = sub('.*Valentina_(.*)\\.raw_Matrix\\.txt', '\\1', quantFiles[i])
quantSet = rbind(quantSet, quantInFile)
}
##########################################################################################
exoSet = psmSet %>%
left_join(quantSet)
saveRDS(exoSet, paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/dataset_exosomePeptidesAllSamples.rds', sep = ''))
##########################################################################################
exoSet$psm = 1
exoIntensitySet = exoSet %>%
group_by(sample, accession, gene) %>%
summarise('area' = sum(ParentPeakArea, na.rm = TRUE), 'psm' = sum(psm, na.rm = TRUE), 'numDetectable' = mean(detectablePeptides, na.rm = TRUE)) %>%
mutate(iBAQ = area / numDetectable) %>%
filter(psm > (numDetectable * 0.2)) %>%
pivot_wider(id_cols = c('accession','gene'), names_from = sample, values_from = iBAQ, names_prefix = 'ibaq_')
##
exoPsmSet = exoSet %>%
group_by(sample, accession, gene) %>%
summarise('area' = sum(ParentPeakArea, na.rm = TRUE), 'psm' = sum(psm, na.rm = TRUE), 'numDetectable' = mean(detectablePeptides, na.rm = TRUE)) %>%
mutate(iBAQ = area / numDetectable) %>%
filter(psm > (numDetectable * 0.2)) %>%
pivot_wider(id_cols = c('accession','gene'), names_from = sample, values_from = psm, names_prefix = 'psm_')
##
exoProteinSet = exoPsmSet %>%
left_join(exoIntensitySet)
exoProteinSet
View(exoProteinSet)
##########################################################################################
generalDatasets = 'C:/Users/chughes/Documents/bccrc/projectsRepository/generalDatasets'
baseWorkspace = 'C:/Users/chughes/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToOthers'
baseRepository = 'C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/relatedToOthers'
#generalDatasets = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/generalDatasets'
#baseWorkspace = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToYbx1'
#baseRepository = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/sorensenLab/relatedToYbx1'
##########################################################################################
library('tidyverse')
library('RColorBrewer')
library('ggplot2')
##########################################################################################
generalDatasets = 'C:/Users/chughes/Documents/bccrc/projectsRepository/generalDatasets'
baseWorkspace = 'C:/Users/chughes/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToOthers'
baseRepository = 'C:/Users/chughes/Documents/bccrc/projectsRepository/sorensenLab/relatedToOthers'
#generalDatasets = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/generalDatasets'
#baseWorkspace = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsWorkspace/sorensenLab/relatedToYbx1'
#baseRepository = 'C:/Users/chris/OneDrive/Documents/bccrc/projectsRepository/sorensenLab/relatedToYbx1'
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2))
sampleInfo
rep(c('a4573Exo','tc71Exo'), each = 6)
paste(rep(c('a4573Exo','tc71Exo'), each = 6), rep(rep(c('Sa','Ut'), each = 3),2), sep = '')
paste(rep(c('a4573Exo','tc71Exo'), each = 6), rep(rep(c('Sa','Ut'), each = 3),2), rep(seq(1,3,1), each = 3), '_', rep(seq(1,3,1), each = 3), sep = '')
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2),
'sampleName' = paste(rep(c('a4573Exo','tc71Exo'), each = 6),
rep(rep(c('Sa','Ut'), each = 3),2),
rep(seq(1,3,1), each = 3),
'_', rep(seq(1,3,1), each = 3),
sep = ''))
sampleInfo
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2),
'sampleName' = paste(rep(c('a4573Exo','tc71Exo'), each = 6),
rep(rep(c('Sa','Ut'), each = 3),2),
rep(seq(1,3,1), each = 3),
'_', rep(seq(1,3,1), each = 3),
sep = ''))
##
files = file.path(baseRepository, 'proteomics20210512_valentinaExosomesMsfraggerOutput', sampleInfo$sampleName, 'psm.tsv')
all(file.exists(files))
files
i = 1
rawPsm = read_csv(files[i])
rawPsm
rawPsm = read_tsv(files[i])
rawPsm
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity)
rawPsm
View(rawPsm)
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene))
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene))
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i]
}
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i]
}
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i])
rawPsm
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i]) %>%
dplyr::select(accession, gene, Intensity, psm, sampleName) %>%
dplyr::group_by(accession, gene, sampleName) %>%
dplyr::summarise(intensity = sum(Intensity, na.rm = TRUE), psm = sum(psm, na.rm = TRUE))
rawPsm
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2),
'sampleName' = paste(rep(c('a4573Exo','tc71Exo'), each = 6),
rep(rep(c('Sa','Ut'), each = 3),2),
rep(seq(1,3,1), each = 3),
'_', rep(seq(1,3,1), each = 3),
sep = ''))
##
files = file.path(baseRepository, 'proteomics20210512_valentinaExosomesMsfraggerOutput', sampleInfo$sampleName, 'psm.tsv')
all(file.exists(files))
##
proteinSet = data.frame()
for(i in 1:length(files)){
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i]) %>%
dplyr::select(accession, gene, Intensity, psm, sampleName) %>%
dplyr::group_by(accession, gene, sampleName) %>%
dplyr::summarise(intensity = sum(Intensity, na.rm = TRUE), psm = sum(psm, na.rm = TRUE))
proteinSet = rbind(proteinSet, rawPsm)
}
proteinSet
##
proteinExprs = proteinSet %>%
pivot_wider(cols = intensity:psm, names_from = sampleName, values_from = c(intensity, psm))
?pivot_wider
##
proteinExprs = proteinSet %>%
pivot_wider(names_from = sampleName, values_from = c(intensity, psm))
##
proteinExprs = proteinSet %>%
pivot_wider(names_from = accession, values_from = c(intensity, psm))
proteinExprs
##
proteinExprs = proteinSet %>%
pivot_wider(names_from = sampleName, values_from = c(intensity, psm))
proteinExprs
rawPsm
which(duplicated(rawPsm))
which(duplicated(rawPsm$accession))
which(duplicated(rawPsm$gene))
table(proteinSet$sampleName)
files
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2),
'sampleName' = paste(rep(c('a4573Exo','tc71Exo'), each = 6),
rep(rep(c('Sa','Ut'), each = 3),2),
rep(seq(1,3,1),3),
'_', rep(seq(1,3,1),3),
sep = ''))
sampleInfo
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2),
'sampleName' = paste(rep(c('a4573Exo','tc71Exo'), each = 6),
rep(rep(c('Sa','Ut'), each = 3),2),
rep(seq(1,3,1),3),
'_', rep(seq(1,3,1),3),
sep = ''))
##
files = file.path(baseRepository, 'proteomics20210512_valentinaExosomesMsfraggerOutput', sampleInfo$sampleName, 'psm.tsv')
all(file.exists(files))
##
proteinSet = data.frame()
for(i in 1:length(files)){
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i]) %>%
dplyr::select(accession, gene, Intensity, psm, sampleName) %>%
dplyr::group_by(accession, gene, sampleName) %>%
dplyr::summarise(intensity = sum(Intensity, na.rm = TRUE), psm = sum(psm, na.rm = TRUE))
proteinSet = rbind(proteinSet, rawPsm)
}
##
proteinExprs = proteinSet %>%
pivot_wider(names_from = sampleName, values_from = c(intensity, psm))
proteinExprs
View(proteinExprs)
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2),
'sampleName' = paste(rep(c('a4573Exo','tc71Exo'), each = 6),
rep(rep(c('Sa','Ut'), each = 3),2),
rep(seq(1,3,1),3),
'_', rep(seq(1,3,1),3),
sep = ''))
##
files = file.path(baseRepository, 'proteomics20210512_valentinaExosomesMsfraggerOutput', sampleInfo$sampleName, 'psm.tsv')
all(file.exists(files))
##
proteinSet = data.frame()
for(i in 1:length(files)){
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i]) %>%
dplyr::select(accession, gene, Intensity, psm, sampleName) %>%
dplyr::group_by(accession, gene, sampleName) %>%
dplyr::summarise(intensity = sum(Intensity, na.rm = TRUE), psm = sum(psm, na.rm = TRUE))
proteinSet = rbind(proteinSet, rawPsm)
}
##
proteinExprs = proteinSet %>%
pivot_wider(names_from = sampleName, values_from = c(intensity, psm))
##
saveRDS(proteinExprs, paste(baseRepository, '/proteomics20210512_valentinaExosomesMsfraggerOutput/dataset_exosomesProteinData.rds', sep = ''))
write.table(proteinExprs, paste(baseRepository, '/proteomics20210512_valentinaExosomesMsfraggerOutput/dataset_exosomesProteinData.tsv', sep = ''),
col.names = TRUE, row.names = FALSE, quote = FALSE, sep = '\t')
##########################################################################################
sampleInfo = data.frame('cellLine' = rep(c('a4573','tc71'), each = 6),
'replicate' = rep(seq(1,3,1), 4),
'treatment' = rep(rep(c('arsenite','untreated'), each = 3), 2),
'sampleName' = paste(rep(c('a4573Exo','tc71Exo'), each = 6),
rep(rep(c('Sa','Ut'), each = 3),2),
rep(seq(1,3,1),3),
'_', rep(seq(1,3,1),3),
sep = ''))
##
files = file.path(baseRepository, 'proteomics20210512_valentinaExosomesMsfraggerOutput', sampleInfo$sampleName, 'psm.tsv')
all(file.exists(files))
##
proteinSet = data.frame()
for(i in 1:length(files)){
rawPsm = read_tsv(files[i]) %>%
dplyr::select(Peptide, `Is Unique`, `Protein ID`, Gene, Intensity) %>%
dplyr::rename(sequence = Peptide,
unique = `Is Unique`,
accession = `Protein ID`,
gene = Gene) %>%
dplyr::filter(unique == TRUE, !grepl('CONT', accession), !is.na(gene), !grepl('-', gene)) %>%
dplyr::mutate(psm = 1, sampleName = sampleInfo$sampleName[i]) %>%
dplyr::select(accession, gene, Intensity, psm, sampleName) %>%
dplyr::group_by(accession, gene, sampleName) %>%
dplyr::summarise(intensity = sum(Intensity, na.rm = TRUE), psm = sum(psm, na.rm = TRUE))
proteinSet = rbind(proteinSet, rawPsm)
}
##
proteinExprs = proteinSet %>%
pivot_wider(names_from = sampleName, values_from = c(intensity, psm))
##
saveRDS(proteinExprs, paste(baseRepository, '/proteomics20210512_valentinaExosomesMsfraggerOutput/dataset_exosomesProteinData.rds', sep = ''))
write.table(proteinExprs, paste(baseRepository, '/proteomics20210512_valentinaExosomesMsfraggerOutput/dataset_exosomesProteinData.tsv', sep = ''),
col.names = TRUE, row.names = FALSE, quote = FALSE, sep = '\t')
##
proteinExprs
##########################################################################################
exocarta = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/EXOCARTA_PROTEIN_MRNA_DETAILS_5.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, inExocarta = 'yes') %>%
dplyr::select(gene, inExocarta)
##########################################################################################
library('tidyverse')
library('vroom')
library('RColorBrewer')
library('ggplot2')
##########################################################################################
exocarta = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/EXOCARTA_PROTEIN_MRNA_DETAILS_5.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, Exocarta = 'yes') %>%
dplyr::select(gene, Exocarta)
exocarta = unique(exocarta)
##
vesicle = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/VESICLEPEDIA_PROTEIN_MRNA_DETAILS_4.1.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, Vesiclepedia = 'yes') %>%
dplyr::select(gene, Vesiclepedia)
vesicle = unique(vesicle)
##
exoAnnotatedSet = exoProteinSubset %>%
left_join(exocarta) %>%
left_join(vesicle)
##########################################################################################
exocarta = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/EXOCARTA_PROTEIN_MRNA_DETAILS_5.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, Exocarta = 'yes') %>%
dplyr::select(gene, Exocarta)
exocarta = unique(exocarta)
##
vesicle = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/VESICLEPEDIA_PROTEIN_MRNA_DETAILS_4.1.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, Vesiclepedia = 'yes') %>%
dplyr::select(gene, Vesiclepedia)
vesicle = unique(vesicle)
##
exoAnnotatedSet = proteinExprs %>%
left_join(exocarta) %>%
left_join(vesicle)
##########################################################################################
exocarta = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/EXOCARTA_PROTEIN_MRNA_DETAILS_5.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, Exocarta = 'yes') %>%
dplyr::select(gene, Exocarta)
exocarta = unique(exocarta)
##
vesicle = vroom(paste(baseRepository, '/proteomics20200715_exosomeProfilingValentina/VESICLEPEDIA_PROTEIN_MRNA_DETAILS_4.1.txt', sep = '')) %>%
filter(SPECIES == 'Homo sapiens') %>%
mutate(gene = `GENE SYMBOL`, Vesiclepedia = 'yes') %>%
dplyr::select(gene, Vesiclepedia)
vesicle = unique(vesicle)
##
exoAnnotatedSet = proteinExprs %>%
left_join(exocarta) %>%
left_join(vesicle)
##
saveRDS(exoAnnotatedSet, paste(baseRepository, '/proteomics20210512_valentinaExosomesMsfraggerOutput/dataset_exosomesProteinDataAnnotated.rds', sep = ''))
write.table(exoAnnotatedSet, paste(baseRepository, '/proteomics20210512_valentinaExosomesMsfraggerOutput/dataset_exosomesProteinDataAnnotated.tsv', sep = ''),
col.names = TRUE, row.names = FALSE, quote = FALSE, sep = '\t')
##
exoAnnotatedSet
exoAnnotatedSet
View(exoAnnotatedSet)
##########################################################################################
library('tidyverse')
library('vroom')
library('RColorBrewer')
library('pheatmap')
##
proteinSummary = proteinExprs %>%
dplyr::filter(gene %in% goi)
##########################################################################################
goi = c('CD81','SDCBP','RAB2A','RAB7A','ALIX','ANXA1','ANXA2','HSPA8','HSP90AA1','HSP90AB1',
'HNRNPA2B1','HNRNPC','HNRNPK','HNRNPCL2','HNRNPL','ILF2','ILF3','DHX9','RUVBL1',
'RUVBL2','EIF4A1','EIF4A2','EEF1A1','EEF1G','EIF2S3','EEF2','XRCC5','XRCC6',
'CBX1','CBX3','SRP9','SRP14')
##
proteinSummary = proteinExprs %>%
dplyr::filter(gene %in% goi)
proteinSummary
names(proteinSumamry)
names(proteinSummary)
##
proteinSummary = proteinExprs %>%
dplyr::filter(gene %in% goi) %>%
pivot_longer(cols = intensity_a4573ExoSa1_1:intensity_tc71ExoUt3_3, names_to = 'sampleName', values_to = 'intensity')
proteinSummary
##
proteinSummary = proteinExprs %>%
dplyr::filter(gene %in% goi) %>%
dplyr::select(accession, gene, intensity_a4573ExoSa1_1:intensity_tc71ExoUt3_3) %>%
pivot_longer(cols = intensity_a4573ExoSa1_1:intensity_tc71ExoUt3_3, names_to = 'sampleName', values_to = 'intensity')
proteinSummary
##
proteinSummary = proteinExprs %>%
dplyr::filter(gene %in% goi) %>%
dplyr::select(accession, gene, intensity_a4573ExoSa1_1:intensity_tc71ExoUt3_3) %>%
pivot_longer(cols = intensity_a4573ExoSa1_1:intensity_tc71ExoUt3_3, names_to = 'sampleName', values_to = 'intensity') %>%
dplyr::group_by(accession, gene) %>%
dplyr::summarise(log10Intensity = log10(sum(intensity, na.rm = TRUE)))
proteinSummary
goi
goi %in% proteinExprs$gene
##########################################################################################
goi = c('CD81','SDCBP','RAB2A','RAB7A','PRCD6IP','ANXA1','ANXA2','HSPA8','HSP90AA1','HSP90AB1',
'HNRNPA2B1','HNRNPC','HNRNPK','HNRNPCL2','HNRNPL','ILF2','ILF3','DHX9','RUVBL1',
'RUVBL2','EIF4A1','EIF4A2','EEF1A1','EEF1G','EIF2S3','EEF2','XRCC5','XRCC6',
'CBX1','CBX3','SRP9','SRP14')
goi %in% proteinExprs$gene
goi[which(goi %in% proteinExprs$gene)]
goi[!which(goi %in% proteinExprs$gene)]
goi[which(!(goi %in% proteinExprs$gene))]
names(proteinSumamry)
names(proteinSummary)
proteinExprs
